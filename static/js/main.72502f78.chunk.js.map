{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Components/Carousel.js","Routes/Home/HomePresenter.js","Routes/Home/HomeContainer.js","Routes/Home/index.js","Routes/Search/SearchPresenter.js","Routes/Search/SearchContainer.js","Routes/Search/index.js","Routes/TV/TVPresenter.js","Routes/TV/TVContainer.js","Routes/TV/index.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/DetailContainer.js","Routes/Detail/index.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","role","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","length","substring","Img","img","CarouselDiv","Carousel","this","nowPlaying","dots","infinite","speed","autoplay","autoplaySpeed","slidesToShow","slidesToScroll","centerMode","centerPadding","map","movie","src","poster_path","React","Component","HomePresenter","popular","upcoming","loading","error","Helmet","Loader","original_title","vote_average","release_date","state","a","data","results","setState","console","log","HomeContainer","Form","form","Input","input","Recommend","h2","MovieSpan","TVSpan","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","movieTrend","tvTrend","onSubmit","placeholder","value","onChange","tv","original_name","show","undefined","first_air_date","event","preventDefault","searchByTerm","target","splice","SearchContainer","TVPresenter","topRated","airingToday","TVContainer","H1Link","Link","Header","header","List","ul","Item","li","current","SLink","withRouter","pathname","location","Content","Cover","bgImage","Backdrop","Data","h3","ItemContainer","Divider","Overview","p","A","Companies","Production","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","imdb_id","href","overview","videos","margin","width","height","key","frameborder","allow","allowfullscreen","production_companies","company","seasons","season","includes","match","push","history","parsedID","parseInt","isNaN","DetailContainer","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72502f78.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"9303010f926b97ded8c5c01dab138497\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n  trend: () => api.get(\"trending/movie/week\"),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n  trend: () => api.get(\"trending/tv/week\"),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 22px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 40px;\n  margin-top: 28px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  color: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nimport Slider from \"react-slick\";\n\nconst Img = styled.img`\n  background-image: url(${(props) => props.bgUrl});\n  display: block;\n  /* height: 460px; */\n  height: 18%;\n\n  border-radius: 15px;\n  justify-content: center;\n  margin: 0px auto;\n  filter: brightness(70%);\n`;\n\nconst CarouselDiv = styled.div`\n  margin: 40px 20px;\n  display: flex;\n  justify-content: center; /* 주 축의 방향에 따라 아이템을 정렬 */\n  align-items: center; /* 주 축을 교차하는 교차축을 따라 아이템을 정렬 */\n  &:hover {\n    ${Img} {\n      filter: brightness(100%);\n    }\n  }\n`;\n\nclass Carousel extends React.Component {\n  render() {\n    const { nowPlaying, isMovie } = this.props;\n    const settings = {\n      dots: false, // 슬라이드 밑에 점 보이게\n      infinite: true, // 무한으로 반복\n      speed: 1000,\n      autoplay: true,\n      autoplaySpeed: 2000, // 넘어가는 속도\n      slidesToShow: 4, // 4장씩 보이게\n      slidesToScroll: 1, // 1장씩 뒤로 넘어가게\n      centerMode: true,\n      centerPadding: \"0px\", // 0px 하면 슬라이드 끝쪽 이미지가 안잘림\n    };\n    return (\n      <Slider {...settings}>\n        {nowPlaying.map((movie) => (\n          <Link to={isMovie ? `/movie/${movie.id}` : `/show/${movie.id}`}>\n            {\" \"}\n            <CarouselDiv>\n              <Img\n                src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n              />\n            </CarouselDiv>\n          </Link>\n        ))}\n      </Slider>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  id: PropTypes.number.isRequired,\n  nowPlaying: PropTypes.array.isRequired,\n};\n\nexport default Carousel;\n","//- 프리젠터 : 컨테이너가 처리한 데이터들을 보여주는 역할을 하는 함수형 컴포넌트. state(상태값), api, 클래스를 다루지않음 (스타일 담당)\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Error from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Carousel from \"Components/Carousel\";\n\nconst Container = styled.div`\n  padding: 20px;\n  padding-top: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 22px;\n  font-weight: 600;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    {\" \"}\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Title>🍿 Now Playing</Title>\n        <Carousel nowPlaying={nowPlaying} isMovie={true} />\n\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"🎬 Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"🤩 Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Error color=\"e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","// - 컨테이너 : data를 가지고, state(상태값)가지고, api를 불러와서 모든 로직을 처리함 (데이터 담당)\nimport { moviesApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movies information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    console.log(this.state);\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Form = styled.form`\n  /* margin-bottom: 50px; */\n  width: 100%;\n  margin: 50px 0px;\n`;\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 60%;\n`;\n\nconst Recommend = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n`;\n\nconst Title = styled.h2`\n  margin: 40px 0px;\n  font-size: 24px;\n  font-weight: 600;\n`;\n\nconst MovieSpan = styled.span`\n  font-family: \"Netflix Sans\", sans-serif;\n  margin: 20px 10px;\n  padding: 5px 12px 7px 12px;\n  font-size: 15px;\n  background-color: #7941e5;\n  border-radius: 15px;\n  text-align: center;\n  filter: brightness(80%);\n  color: white;\n\n  &:hover {\n    filter: brightness(100%);\n  }\n`;\n\nconst TVSpan = styled.span`\n  font-family: \"Netflix Sans\", sans-serif;\n  margin: 20px 10px;\n  padding: 5px 12px 8px 12px;\n  font-size: 15px;\n  background-color: #4287f5;\n  border-radius: 15px;\n  text-align: center;\n  filter: brightness(80%);\n  &:hover {\n    filter: brightness(100%);\n  }\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  loading,\n  error,\n  handleSubmit,\n  updateTerm,\n  movieTrend,\n  tvTrend,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies of TV Show...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      ></Input>\n    </Form>\n    <Title>🎞 This Week's Top 5 Movies 🥰</Title>\n    {movieTrend && movieTrend.length > 0 && (\n      <Recommend>\n        {movieTrend.map((movie) => (\n          <Link to={`/movie/${movie.id}`}>\n            <MovieSpan>{movie.title}</MovieSpan>\n          </Link>\n        ))}\n      </Recommend>\n    )}\n    <Title>💃 This Week's Top 5 TV Shows 😆</Title>\n    {tvTrend && tvTrend.length > 0 && (\n      <Recommend>\n        {tvTrend.map((tv) => (\n          <Link to={`/show/${tv.id}`}>\n            <TVSpan>{tv.original_name}</TVSpan>\n          </Link>\n        ))}\n      </Recommend>\n    )}\n\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie result\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={\n                  movie.release_date.length > 0\n                    ? movie.release_date.substring(0, 4)\n                    : null\n                }\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}{\" \"}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show result\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date !== undefined\n                    ? show.first_air_date.substring(0, 4)\n                    : null\n                }\n              />\n            ))}\n          </Section>\n        )}\n      </>\n    )}\n    {error && <Message color=\"#e74c3c\" text={error} />}\n    {tvResults &&\n      movieResults &&\n      tvResults.length === 0 &&\n      movieResults.length === 0 && (\n        <Message text={`Nothing found`} color=\"95a5a6\" />\n      )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n    movieTrend: null,\n    tvTrend: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: movieTrend },\n      } = await moviesApi.trend();\n      movieTrend.splice(5, 15);\n      const {\n        data: { results: tvTrend },\n      } = await tvApi.trend();\n      tvTrend.splice(5, 15);\n      console.log(movieTrend);\n      this.setState({\n        movieTrend,\n        tvTrend,\n      });\n      console.log(movieTrend);\n    } catch {\n      this.setState({\n        error: \"Can't find information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const {\n      movieResults,\n      tvResults,\n      searchTerm,\n      loading,\n      error,\n      movieTrend,\n      tvTrend,\n    } = this.state;\n    console.log(this.state);\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n        movieTrend={movieTrend}\n        tvTrend={tvTrend}\n      />\n    );\n  }\n}\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Carousel from \"Components/Carousel\";\n\nconst Container = styled.div`\n  padding: 10px;\n`;\n\nconst Title = styled.span`\n  font-size: 22px;\n  font-weight: 600;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title> TV | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Title>🌟 top Rated</Title>\n        {topRated && topRated.length > 0 && (\n          <Carousel nowPlaying={topRated} isMovie={false} />\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"😆👍 Popluar Show\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"📺 Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import { tvApi } from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      this.setState({\n        topRated,\n        airingToday,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    console.log(this.state);\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst H1Link = styled(Link)`\n  font-family: \"Netflix Sans\", sans-serif;\n  font-weight: 600;\n  font-size: 70px;\n  margin: 20px;\n`;\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 70px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"white\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <H1Link to=\"/\">NOMFLIX</H1Link>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 30px;\n`;\n\nconst Title = styled.h3`\n  margin: 20px 0;\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div``;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 14px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n  margin: 30px 0px;\n`;\n\nconst A = styled.a`\n  display: inline-block;\n  margin-left: 10px;\n  background-color: #f3c317;\n  padding: 5px 10px;\n  border-radius: 6px;\n  color: black;\n  font-weight: 800;\n`;\n\nconst Img = styled.img`\n  width: 200px;\n  height: 300px;\n  background-color: white;\n  margin: 0px;\n  padding: 10px;\n`;\nconst Companies = styled.div`\n  display: flex;\n`;\n\nconst Production = styled.span`\n  font-family: \"Netflix Sans\", sans-serif;\n  margin: 20px 10px;\n  padding: 5px 12px 8px 12px;\n  font-size: 15px;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 15px;\n  text-align: center;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      ></Backdrop>\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n            {result.imdb_id ? (\n              <A href={`https://www.imdb.com/title/${result.imdb_id}`}>IMDb</A>\n            ) : null}\n            {console.log(result)}\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n\n          {result.videos.results[0] ? (\n            <>\n              <Title>Trailers</Title>\n              <iframe\n                margin=\"20px\"\n                width=\"560\"\n                height=\"315\"\n                src={`https://www.youtube.com/embed/${result.videos.results[0].key}`}\n                title=\"YouTube video player\"\n                frameborder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowfullscreen\n              ></iframe>\n            </>\n          ) : null}\n\n          {result.production_companies.length > 0 ? (\n            <Companies>\n              <Title>Productions</Title>\n              {result.production_companies.map((company) => (\n                <>\n                  <Production>{company.name}</Production>\n                </>\n              ))}\n            </Companies>\n          ) : null}\n\n          {result.seasons ? (\n            <>\n              {\" \"}\n              <Title>Seasons</Title>\n              {result.seasons.map((season) => (\n                <>\n                  {season.poster_path ? (\n                    <Img\n                      src={`https://image.tmdb.org/t/p/w300${season.poster_path}`}\n                    ></Img>\n                  ) : null}\n                </>\n              ))}\n            </>\n          ) : null}\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      loading: true,\n      error: null,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n\n    const { isMovie } = this.state;\n\n    const parsedID = parseInt(id);\n    if (isNaN(parsedID)) {\n      return push(\"/\");\n    }\n\n    let result = null;\n\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedID));\n        console.log(result);\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedID));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, loading, error } = this.state;\n    return <DetailPresenter result={result} loading={loading} error={error} />;\n  }\n}\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport Search from \"Routes/Search\";\nimport TV from \"Routes/TV\";\nimport Header from \"Components/Header\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n  ${reset}\n  a{ text-decoration :none;\n    color : inherit;}\n  *{\n    box-sizing:border-box;\n    \n  }\n  body {\n    font-family : --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\n  ; font-size: 12px;\n  background-color : rgba(20,20,20,1);\n  color : white;\n  padding-top : 50px;\n  margin: 40px 20px;\n  }\n  `;\n\nexport default globalStyles;\n","import Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}